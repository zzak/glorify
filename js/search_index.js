var search_data = {"index":{"searchIndex":["sinatra","glorify","helpers","template","glorify()","glorify_css()","registered()","readme"],"longSearchIndex":["sinatra","sinatra::glorify","sinatra::glorify::helpers","sinatra::glorify::template","sinatra::glorify::helpers#glorify()","sinatra::glorify::helpers#glorify_css()","sinatra::glorify::registered()",""],"info":[["Sinatra","","Sinatra.html","","<p>Sinatra is a microframework for Ruby\n<p>See sinatra on github for more: github.com/sinatra/sinatra\n"],["Sinatra::Glorify","","Sinatra/Glorify.html","","<p>Sinatra helper to parse markdown with syntax highlighting like the pros\n<p>See the README for more info\n"],["Sinatra::Glorify::Helpers","","Sinatra/Glorify/Helpers.html","","<p>If you want to stick with your current renderer and just render some code\nblocks within your view, use …\n"],["Sinatra::Glorify::Template","","Sinatra/Glorify/Template.html","","<p>Sinatra::Glorify comes with a tilt template for rendering markdown.\n<p>This allows you to override the default …\n"],["glorify","Sinatra::Glorify::Helpers","Sinatra/Glorify/Helpers.html#method-i-glorify","(text)","<p>Convenience method for custom markdown and templates.\n<p>For modular applications you must add <code>register </code> …\n"],["glorify_css","Sinatra::Glorify::Helpers","Sinatra/Glorify/Helpers.html#method-i-glorify_css","()","<p>A helper route for your application to provide a pygments friendly\nstylesheet.\n<p>Given, your Sinatra application …\n"],["registered","Sinatra::Glorify","Sinatra/Glorify.html#method-c-registered","(app)","<p>Sinatra extension setup to configure the application.\n<p>Also, registers the Sinatra::Glorify::Helpers and …\n"],["README","","README_md.html","","<p>Sinatra::Glorify\n<p><img src=\"https://travis-ci.org/zzak/glorify.png?branch=master\">\n<p>Sinatra helper to parse …\n"]]}}